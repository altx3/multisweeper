{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build Server",
      "type": "shell",
      "command": "meson setup builddir --reconfigure && meson compile -C builddir",
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/server"
      }
    },
    {
      "label": "Run Server",
      "type": "shell",
      "command": "./builddir/multisweeper-server",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "dependsOn": ["Build Server"],
      "options": {
        "cwd": "${workspaceFolder}/server"
      }
    },
    {
      "label": "Format Server (clang-format)",
      "type": "shell",
      "command": "find . -name '*.cpp' -o -name '*.h' -o -name '*.hpp' | xargs clang-format --dry-run --Werror",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "problemMatcher": [],
      "detail": "Formats the active C++ file using the C/C++ extension formatter."
    },
    {
      "label": "Lint Server (clang-tidy)",
      "type": "shell",
      "windows": {
        "command": "echo bruh this is cooked on windows I\"'\"ll figure it out some other time. {workspaceFolder} be use / in windows"
      },
      "linux": {
        "command": "find . -type f \\( -name '*.cpp' -o -name '*.h' -o -name '*.hpp' \\) | xargs -r sh -c 'clang-tidy \"$@\" -- -I./server/include -std=c++20' sh"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "problemMatcher": [
        {
          "owner": "cpp",
          "fileLocation": ["relative", "${workspaceFolder}"],
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
          }
        }
      ],
      "detail": "Runs clang-tidy on all C++ files in the workspace."
    }
  ]
}
